name: Deploy Artifacts and BlueOS Extension Image

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [
          'aarch64-unknown-linux-musl',
          'armv7-unknown-linux-musleabihf',
          'x86_64-unknown-linux-musl'
        ]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use cached dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: "${{ hashFiles('**/Cargo.lock') }}-${{ matrix.target }}"
          shared-key: "shared"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Cross
        run: cargo install cross

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "*"
          cache-dependency-path: "frontend/package-lock.json"
          cache: "npm"

      - name: Build single target
        run: ./build_cross.sh --all-features --verbose
        env:
          TARGETS: ${{ matrix.target }}

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: radcam-manager-${{ matrix.target }}
          path: target/build/${{ matrix.target }}/${{ matrix.target }}/release/radcam-manager
          
      - name: Prepare temporary artifact
        run: |
          ls -lah target/build/${{ matrix.target }}/${{ matrix.target }}/release/radcam-manager || true
          tar -czpvf temporary-artifact-${{ matrix.target }}.tar.gz target/build/${{ matrix.target }}/${{ matrix.target }}/release/radcam-manager
        
      - name: Upload temporary artifact
        uses: actions/upload-artifact@v4
        with:
          name: temporary-artifact-${{ matrix.target }}.tar.gz
          path: temporary-artifact-${{ matrix.target }}.tar.gz
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      
      - name: Decompress temporary artifacts
        run: |
          ls -lah .
          find . -name "temporary-artifact-*.tar.gz" -exec tar -xzpvf {} \;

      - name: Remove temporary artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: temporary-artifact-*.tar.gz

      - name: Upload binaries to release
        if: ${{ github.event_name == 'push' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: radcam-manager-*
          tag: ${{ github.ref }}
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
          overwrite: true

      - name: Deploy BlueOS Extension
        uses: joaoantoniocardoso/Deploy-BlueOS-Extension@allow-dirty
        with:
          docker-username: ${{ secrets.DOCKER_USERNAME }}
          docker-password: ${{ secrets.DOCKER_PASSWORD }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          image-name: 'radcam-manager'
          checkout-clean: false